{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMBDLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,MAA0B,6CCA1B,MAA0B,sC,cCE5BA,EAAUC,IAAOC,IAAV,oFAMPC,EAAUF,IAAOC,IAAV,2LASPE,EAAUH,IAAOI,IAAV,4HASPC,EAAcL,IAAOI,IAAV,2H,OCJTE,EAdA,kBACX,cAACP,EAAD,UACI,eAACG,EAAD,WACI,cAAC,IAAD,CAAMK,GAAG,IAAT,SACA,cAACJ,EAAD,CAASK,IAAKC,EAAUC,IAAK,gBAE7B,cAACL,EAAD,CAAaG,IAAKG,EAAUD,IAAI,oB,sCCXtCE,EAAU,gCACVC,EAAUC,mCAEVC,EAAe,UAAMH,EAAN,gCAAqCC,EAArC,0BACfG,EAAgB,UAAMJ,EAAN,iCAAsCC,EAAtC,mBAEhBI,EAAiB,UAAML,EAAN,4CAAiDC,GAClEK,EAAS,UAAMN,EAAN,4DAAiEC,GAC1EM,EAAc,UAAMP,EAAN,8CAAmDC,GAEjEO,GAAiB,6BAEjBC,GAAgB,QAEhBC,GAAc,OCPdC,GAAgB,CACpBC,OAAQ,OACRC,QAAS,CACP,eAAgB,qBA8DLC,GA1DK,CAClBC,YAAY,WAAD,4BAAE,WAAOC,EAAYC,GAAnB,eAAAC,EAAA,6DACLC,EAAWH,EAAU,UACpBb,GADoB,OACFa,EADE,iBACiBC,GADjB,UAEpBb,EAFoB,iBAEKa,GAHrB,SAISG,MAAMD,GAJf,8BAI0BE,OAJ1B,mFAAF,qDAAC,GAMZC,WAAW,WAAD,4BAAE,WAAMC,GAAN,eAAAL,EAAA,6DACJC,EADI,UACUnB,EADV,iBAC0BuB,EAD1B,oBAC6CtB,GAD7C,SAEUmB,MAAMD,GAFhB,8BAE2BE,OAF3B,mFAAF,mDAAC,GAIXG,aAAa,WAAD,4BAAE,WAAMD,GAAN,eAAAL,EAAA,6DACNO,EADM,UACezB,EADf,iBAC+BuB,EAD/B,4BAC0DtB,GAD1D,SAEQmB,MAAMK,GAFd,8BAEgCJ,OAFhC,mFAAF,mDAAC,GAKbK,gBAAgB,WAAD,4BAAE,4BAAAR,EAAA,sEACeE,MAAMf,GADrB,8BACyCgB,OADzC,cACTM,EADS,yBAERA,EAASC,eAFD,2CAAF,kDAAC,GAIhBC,aAAa,WAAD,4BAAE,WAAOC,EAAcC,EAAUC,GAA/B,iBAAAd,EAAA,6DACNe,EAAW,CACfF,WACAC,WACAJ,cAAeE,GAJL,SAQJV,MAAMd,EAAD,YAAC,eACPK,IADM,IAETuB,KAAMC,KAAKC,UAAUH,MAVb,8BAYVZ,OAZU,kBAcHgB,QAdG,iCAgBFjB,MAAMb,EAAD,YAAC,eACPI,IADM,IAETuB,KAAMC,KAAKC,UAAU,CAAER,cAAeE,OAlBhC,+BAoBRT,OApBQ,eAeJiB,EAfI,yBAqBHA,GArBG,4CAAF,uDAAC,GAwBbC,UAAU,WAAD,4BAAE,WAAOD,EAAWf,EAASiB,GAA3B,iBAAAtB,EAAA,6DACHC,EADG,UACWnB,EADX,iBAC2BuB,EAD3B,2BACqDtB,EADrD,uBAC2EqC,GAD3E,SAIDlB,MAAMD,EAAD,YAAC,eACPR,IADM,IAETuB,KAAMC,KAAKC,UAAU,CAAEI,aANlB,8BAQPnB,OARO,cAGHoB,EAHG,yBAUFA,GAVE,2CAAF,uDAAC,IC3DCtD,GAAUC,IAAOC,IAAV,sjBAON,qBAAGqD,SAmBJpD,GAAUF,IAAOC,IAAV,0GAQPsD,GAAOvD,IAAOC,IAAV,mlBCdFuD,GAlBG,SAAC,GAAD,IAAEF,EAAF,EAAEA,MAAOG,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,KAAhB,OAEd,cAAC,GAAD,CAASJ,MAAOA,EAAhB,SACI,cAAC,GAAD,UACI,eAACC,GAAD,WAEI,6BAAKE,IACL,4BAAIC,YCTP3D,GAAUC,IAAOC,IAAV,oOAmBPC,GAAUF,IAAOC,IAAV,8ICNL0D,GAVF,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OAET,eAAC,GAAD,WACI,6BAAKD,IACL,cAAC,GAAD,UAAUC,QCPLC,GAAQ9D,IAAOI,IAAV,uWCyBH2D,GAnBD,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAOnB,EAAV,EAAUA,QAAS6B,EAAnB,EAAmBA,UAAnB,OAIV,8BACKA,EACG,cAAC,IAAD,CAAMzD,GAAE,WAAM4B,GAAd,SACI,cAAC2B,GAAD,CAAOtD,IAAK8C,EAAO5C,IAAI,kBAI3B,cAACoD,GAAD,CAAOtD,IAAK8C,EAAO5C,IAAI,mBCjBpBuD,GCAQjE,IAAOC,IAAV,uZ,QCFL,OAA0B,wCCE5BF,GAAUC,IAAOC,IAAV,sJAQPC,GAAUF,IAAOC,IAAV,wqBCkCLiE,GAjCG,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,EAA0BC,mBAAS,IAAnC,oBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAUC,kBAAO,GAiBvB,OAfAC,qBAAU,WACN,IAAGF,EAAQG,QAAX,CAKA,IAAMC,EAAQC,YAAW,WAErBT,EAAcE,KAEf,KACH,OAAO,kBAAMQ,aAAaF,IARtBJ,EAAQG,SAAU,IASvB,CAACP,EAAeE,IAIf,cAAC,GAAD,UACK,eAAC,GAAD,WACG,qBAAK7D,IAAKsE,GAAYpE,IAAI,gBAC1B,uBAAOqE,KAAK,OAAOC,YAAY,eAC/BC,SAAU,SAAAC,GAAK,OAAIZ,EAASY,EAAMC,cAAc/B,QAChDA,MAAOiB,UClCVtE,GAAUC,IAAOoF,OAAV,gYCcLC,GAXA,SAAC,GAAD,IAAG3B,EAAH,EAAGA,KAAM4B,EAAT,EAASA,SAAT,OAEX,cAAC,GAAD,CAASP,KAAK,SAASQ,QAASD,EAAhC,SACK5B,K,SCPI8B,GAAW,SAAAC,GACtB,IAAMC,EAAQC,KAAKC,MAAMH,EAAO,IAC1BI,EAAOJ,EAAO,GACpB,MAAM,GAAN,OAAUC,EAAV,aAAoBG,EAApB,MAGWC,GAAe,SAAAC,GAM1B,OALkB,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAERC,OAAON,IAGbO,GAAmB,SAAAC,GAC9B,IAAMC,EAAeC,eAAeC,QAAQH,GAC5C,OAAOC,GAAgBzD,KAAK4D,MAAMH,ICZ9BI,GAAe,CACjB/E,KAAM,EACNgF,QAAS,GACTC,YAAa,EACbC,cAAe,GCVJ,OAA0B,qCC2D1BC,GAxCF,WAET,MFRwB,WACxB,MAAoC5C,mBAAS,IAA7C,oBAAOxC,EAAP,KAAmBuC,EAAnB,KACA,EAA0BC,mBAASwC,IAAnC,oBAAOvC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,oBAAO6C,EAAP,KAAgBC,EAAhB,KACA,EAA0B9C,oBAAS,GAAnC,oBAAO+C,EAAP,KAAcC,EAAd,KACA,EAA0ChD,oBAAS,GAAnD,oBAAOiD,EAAP,KAAsBC,EAAtB,KAEM3F,EAAW,uCAAG,WAAOE,GAAP,6BAAAC,EAAA,6DAAaF,EAAb,+BAA0B,GAA1B,SAIZwF,GAAS,GACTF,GAAW,GALC,SAOSK,GAAI5F,YAAYC,EAAYC,GAPrC,OAON2F,EAPM,OAQZlD,GAAS,SAAAmD,GAAI,kCACND,GADM,IAETX,QACIhF,EAAO,EAAP,uBAAe4F,EAAKZ,SAApB,aAAgCW,EAAOX,UAAvC,aAAsDW,EAAOX,cAXzD,kDAeZO,GAAS,GAfG,QAiBhBF,GAAW,GAjBK,0DAAH,sDAiDjB,OA7BAzC,qBAAU,WACN,IAAI7C,EAAW,CACX,IAAM4E,EAAeF,GAAiB,aACtC,GAAGE,EAEC,YADAlC,EAASkC,GAIjBlC,EAASsC,IACTjF,EAAY,EAAGC,KAChB,CAACA,IAGJ6C,qBAAU,WACF4C,IAEJ1F,EAAY0C,EAAMxC,KAAO,EAAGD,GAC5B0F,GAAiB,MAElB,CAACD,EAAezF,EAAYyC,EAAMxC,OAIrC4C,qBAAU,WACF7C,GAAY6E,eAAeiB,QAAQ,YAAa3E,KAAKC,UAAUqB,MAGpE,CAACzC,EAAYyC,IAET,CAAEA,QAAO4C,UAASE,QAAOvF,aAAYuC,gBAAemD,oBEhDoBK,GAAvEtD,EAAR,EAAQA,MAAO4C,EAAf,EAAeA,QAASE,EAAxB,EAAwBA,MAAOvF,EAA/B,EAA+BA,WAAYuC,EAA3C,EAA2CA,cAAemD,EAA1D,EAA0DA,iBAE1D,OAAGH,EAAc,2DAGb,sCACEvF,GAAcyC,EAAMwC,QAAQ,GAC9B,cAAC,GAAD,CACAvD,MAAK,UAAKlC,IAAL,OAAsBC,IAAtB,OAAsCgD,EAAMwC,QAAQ,GAAGe,eAC5DnE,MAAOY,EAAMwC,QAAQ,GAAGgB,eACxBnE,KAAOW,EAAMwC,QAAQ,GAAGiB,WAEpB,KACJ,cAAC,GAAD,CAAW3D,cAAeA,IAC1B,cAAC,GAAD,CAAMP,OAAUhC,EAAa,gBAAkB,iBAA/C,SACKyC,EAAMwC,QAAQkB,KAAI,SAAAC,GAAK,OAEpB,cAAC,GAAD,CAEAhE,WAAS,EACTV,MACI0E,EAAMC,YACJ7G,GAAiBE,GAAc0G,EAAMC,YACrCC,GAEN/F,QAAS6F,EAAMG,IAPVH,EAAMG,SAYlBlB,GAAW,cAAC,GAAD,IACX5C,EAAMxC,KAAOwC,EAAMyC,cAAgBG,GAChC,cAAC,GAAD,CAAQvD,KAAK,YAAY4B,SAAU,kBAAKgC,GAAiB,UCnDxDvH,GAAUC,IAAOC,IAAV,0MAUPC,GAAUF,IAAOC,IAAV,gZCQLmI,GAdI,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OAEf,cAAC,GAAD,UAEI,eAAC,GAAD,WACA,cAAC,IAAD,CAAM9H,GAAG,IAAT,SACI,0CAEJ,qCACA,+BAAO8H,UCZFtI,GAAUC,IAAOC,IAAV,kUACF,gBAAGqI,EAAH,EAAGA,SAAH,OACNA,EAAQ,eAAWlH,IAAX,OAA4BC,IAA5B,OAA4CiH,EAA5C,MACN,UAmBDpI,GAAUF,IAAOC,IAAV,4QAcPsD,GAAOvD,IAAOC,IAAV,gsBCcFsI,GAtCG,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAH,OAEd,cAAC,GAAD,CAASM,SAAUN,EAAMJ,cAAzB,SACI,eAAC,GAAD,WACI,cAAC,GAAD,CAAOtE,MACH0E,EAAMC,YAAN,UACK7G,IADL,OACsBE,IADtB,OACoC0G,EAAMC,aACxCC,GAENlE,WAAW,EACXtD,IAAI,gBAEJ,eAAC,GAAD,WACI,6BAAKsH,EAAMvE,QACX,sCACA,4BAAIuE,EAAMF,WAEV,sBAAKU,UAAU,mBAAf,UACI,gCACI,wCACA,qBAAKA,UAAU,QAAf,SAAwBR,EAAMS,kBAElC,sBAAKD,UAAU,WAAf,UACI,0CAAaR,EAAMU,UAAUC,OAAS,EAAI,IAAM,MAC/CX,EAAMU,UAAUX,KAAI,SAAAa,GAAQ,OACzB,4BAA6BA,EAASC,MAA9BD,EAASE,6BCtChC/I,GAAUC,IAAOC,IAAV,4JASPC,GAAUF,IAAOC,IAAV,ooBCmBL8I,GApBM,SAAC,GAAD,IAAGtD,EAAH,EAAGA,KAAMuD,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OAEjB,cAAC,GAAD,UACI,eAAC,GAAD,WACI,qBAAKT,UAAU,SAAf,SACI,+CAAkBhD,GAASC,QAE/B,qBAAK+C,UAAU,SAAf,SACI,yCAAY1C,GAAakD,QAE7B,qBAAKR,UAAU,SAAf,SACI,0CAAa1C,GAAamD,cCnB7BlJ,GAAUC,IAAOC,IAAV,0PAkBP6D,GAAQ9D,IAAOI,IAAV,6ICFH8I,GAZD,SAAC,GAAD,IAAEL,EAAF,EAAEA,KAAMM,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAnB,OAEV,eAAC,GAAD,WACI,cAAC,GAAD,CAAO5I,IAAK4I,EAAU1I,IAAI,gBAC1B,6BAAKmI,IACL,4BAAIM,QC0CGE,GAnCD,WAEV,IAEA,ECdyB,SAAAlH,GACzB,MAA0BiC,mBAAS,IAAnC,oBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,oBAAO6C,EAAP,KAAgBC,EAAhB,KACA,EAA0B9C,oBAAS,GAAnC,oBAAO+C,EAAP,KAAcC,EAAd,KA4CA,OAzCA3C,qBAAU,WACN,IAAMvC,EAAU,uCAAG,gCAAAJ,EAAA,sEAEXoF,GAAW,GACXE,GAAS,GAHE,SAKSG,GAAIrF,WAAWC,GALxB,cAKL6F,EALK,gBAMWT,GAAInF,aAAaD,GAN5B,OAMLmH,EANK,OAQLZ,EAAYY,EAAQC,KAAKC,QAC3B,SAAAC,GAAM,MAAmB,aAAfA,EAAOC,OAGjBpF,EAAS,2BACF0D,GADC,IAEJ2B,OAAQL,EAAQM,KAChBlB,eAEJxB,GAAW,GAjBJ,kDAmBXE,GAAS,GAnBE,0DAAH,qDAwBZZ,EAAeF,GAAiBnE,GACpC,GAAGqE,EAGC,OAFAlC,EAASkC,QACTU,GAAW,GAGfhF,MACD,CAACC,IAEAsC,qBAAU,WAEVgC,eAAeiB,QAAQvF,EAASY,KAAKC,UAAUqB,MAGhD,CAAClC,EAASkC,IAEN,CAACA,QAAO4C,UAASE,SDjCiB0C,CAFrBC,cAAZ3H,SAEO6F,EAAf,EAAQ3D,MAAc4C,EAAtB,EAAsBA,QAASE,EAA/B,EAA+BA,MAE/B,OAAGF,EAAgB,cAAC,GAAD,IAChBE,EAAc,0DAEb,qCACA,cAAC,GAAD,CAAYkB,WAAYL,EAAMH,iBAC9B,cAAC,GAAD,CAAWG,MAAOA,IAClB,cAAC,GAAD,CAAcvC,KAAMuC,EAAM+B,QAASf,OAAQhB,EAAMgB,OAAQC,QAASjB,EAAMiB,UACxE,cAAC,GAAD,CAAMrF,OAAO,SAAb,SACKoE,EAAM2B,OAAO5B,KAAI,SAAAiC,GAAK,OACnB,cAAC,GAAD,CAEAnB,KAAMmB,EAAMnB,KACZM,UAAWa,EAAMb,UACjBC,SACIY,EAAMC,aAAN,UACK7I,IADL,OACsBE,IADtB,OACoC0I,EAAMC,cACxC/B,IAND8B,EAAMlB,oBE9BZoB,GAFE,kBAAM,6CCAVC,GAAcC,YAAH,wnBCuBTC,GAbH,kBACR,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,KAAKC,QAAS,cAAC,GAAD,SAE1B,cAACJ,GAAD,QChBNK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.71171599.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n\r\n    @media screen and (max-width: 500px){\r\n        width: 150px;\r\n    }\r\n\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n\r\n    @media screen and (max-width:500px){\r\n        width: 80px\r\n\r\n\r\n    }\r\n`;\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RMBDLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\r\n\r\nconst Header = () => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n            <LogoImg src={RMBDLogo} alt= 'rmdb-logo'/>\r\n            </Link>\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo'/>\r\n\r\n\r\n        </Content>\r\n\r\n    </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: linear-gradient(\r\n        to bottom, rgba(0,0,0,0)\r\n        39%, rgba(0,0,0,0)\r\n        41%, rgba(0,0,0,0.65)\r\n        100%\r\n    ),\r\n        url(${({ image }) => image }), var(--darkGrey);\r\n        background-size: 100%, cover;\r\n        background-position: center;\r\n        height: 600px;\r\n        position: relative;\r\n        animation: animateHeroImage 1s;\r\n\r\n        @keyFrames animateHeroImage {\r\n            from {\r\n                opacity: 0;\r\n            }\r\n            to {\r\n                opacity: 1;\r\n            }\r\n\r\n\r\n        }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    padding: 20px;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n\r\n\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    color: var(--white);\r\n\r\n    h1{\r\n        font-size: var(--fontSuperBig);\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontBig);\r\n\r\n        }\r\n\r\n    }\r\n    p{\r\n\r\n        font-size: var(--fontMed);\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontSmall);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @media screen and (max-width: 720px){\r\n\r\n        max-width: 100%;\r\n\r\n    }\r\n\r\n`;","import React from 'react';\r\n//Styles\r\nimport { Wrapper, Content, Text } from './HeroImage.styles';\r\n\r\nconst HeroImage = ({image, title, text}) => (\r\n\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n\r\n\r\n        </Content>\r\n\r\n    </Wrapper>\r\n\r\n\r\n);\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\nmax-width: var(--maxWidth);\r\nmargin: 0 auto;\r\npadding: 0 20px;\r\n\r\nh1{\r\n    color: var(--medGrey);\r\n\r\n    @media screen and (max-width: 768px){\r\n\r\n        font-size: var(--fontBig);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n    grid-gap: 2rem;\r\n\r\n\r\n\r\n`;\r\n\r\n","import React from 'react';\r\n\r\n//Styles\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({header, children}) => (\r\n\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>{children}</Content>\r\n    </Wrapper>\r\n\r\n\r\n);\r\n\r\nexport default Grid;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n\r\n    width: 100%;\r\n    max-width: 720px;\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateThumb 0.5s;\r\n\r\n    :hover{\r\n        opacity: 0.8;\r\n    }\r\n\r\n    @keyframes animateThumb {\r\n        from{\r\n            opacity: 0;\r\n        }to {\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Styles\r\n\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n\r\n  \r\n    \r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='movie-thumb'/>\r\n            </Link>\r\n\r\n        ) : (\r\n            <Image src={image} alt='movie-thumb'/>\r\n        )}\r\n    </div>\r\n    \r\n   \r\n    \r\n);\r\n\r\nexport default Thumb;\r\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n\r\n    @keyframes spin {\r\n\r\n        0%{\r\n            transform: rotate(0deg);\r\n        }\r\n        100%{\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 55px;\r\n    background: var(--medGrey);\r\n    margin: 0 auto;\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n    img{\r\n        position: absolute;\r\n        left: 15px;\r\n        top: 14px;\r\n        width: 30px;\r\n    }\r\n    input{\r\n        font-size: var(--fontBig);\r\n        position: absolute;\r\n        left: 0;\r\n        margin: 8px 0;\r\n        padding: 0 0 0 60px;\r\n        border: 0;\r\n        width: 95%;\r\n        background: transparent;\r\n        height: 40px;\r\n        color: var(--white);\r\n        :focus{\r\n            outline: none;\r\n        }\r\n    }\r\n`;","import React, { useState, useEffect, useRef} from 'react';\r\n\r\n//Image\r\n\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n//Styles\r\n\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n    const [state, setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if(initial.current){\r\n\r\n            initial.current = false;\r\n            return;\r\n        }\r\n        const timer = setTimeout(() => {\r\n\r\n            setSearchTerm(state);\r\n\r\n        }, 500)\r\n        return () => clearTimeout(timer)\r\n    }, [setSearchTerm, state])\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n             <Content>\r\n                <img src={searchIcon} alt='search-icon'/>\r\n                <input type='text' placeholder='Search Movie'\r\n                onChange={event => setState(event.currentTarget.value)}\r\n                value={state}\r\n                />\r\n             </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\n\r\nexport default SearchBar;\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n    display: block;\r\n    background: var(--darkGrey);\r\n    width: 25%;\r\n    min-width: 200px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border: 0;\r\n    font-size: var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n        opacity: 0.8;\r\n\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({ text, callback }) => (\r\n\r\n    <Wrapper type=\"button\" onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n\r\n\r\n\r\n\r\n);\r\n\r\nexport default Button;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import { useState, useEffect, useRef } from \"react\";\r\n//API\r\nimport API from '../API';\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst initialState = {\r\n    page: 0,\r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0\r\n}\r\n\r\nexport const useHomeFetch = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n    \r\n    const fetchMovies = async (page, searchTerm = \"\") => {\r\n\r\n        try {\r\n\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n            setState(prev => ({\r\n                ...movies,\r\n                results: \r\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }))\r\n\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n    //Initial render\r\n    useEffect(() => {\r\n        if(!searchTerm){\r\n            const sessionState = isPersistedState('homeState');\r\n            if(sessionState){\r\n                setState(sessionState);\r\n                return;\r\n            }\r\n        }\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm);\r\n    }, [searchTerm]);\r\n\r\n    //Load More\r\n    useEffect(() =>{\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page + 1, searchTerm);\r\n        setIsLoadingMore(false);\r\n\r\n    }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n    //Write the session storage\r\n\r\n    useEffect(() =>{\r\n        if(!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\r\n\r\n\r\n    }, [searchTerm, state]);\r\n\r\n    return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n\r\n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import { stat } from 'fs';\r\nimport React from 'react';\r\n//API\r\nimport API from '../API';\r\n//Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\r\n\r\n//Components\r\nimport HeroImage from './HeroImage';\r\nimport Grid from './Grid';\r\nimport Thumb from './Thumb';\r\nimport Spinner from './Spinner';\r\nimport SearchBar from './SearchBar';\r\nimport Button from './Button';\r\n//Hook\r\nimport { useHomeFetch } from '../hooks/useHomeFetch';\r\n//Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Home = () => {\r\n\r\n    const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } = useHomeFetch();\r\n    \r\n    if(error) return <div>Something went wrong ...</div>;\r\n\r\n    return (\r\n        <>\r\n        {!searchTerm && state.results[0] ?(\r\n        <HeroImage\r\n        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n        title={state.results[0].original_title}\r\n        text ={state.results[0].overview}\r\n        /> \r\n        ) : null}\r\n        <SearchBar setSearchTerm={setSearchTerm}/>\r\n        <Grid header = {searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n            {state.results.map(movie => (\r\n\r\n                <Thumb \r\n                key={movie.id}\r\n                clickable\r\n                image={\r\n                    movie.poster_path\r\n                    ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                    : NoImage\r\n                }\r\n                movieId={movie.id}\r\n                />\r\n\r\n            ))}\r\n        </Grid>\r\n        {loading && <Spinner/>}\r\n        {state.page < state.total_pages && !loading && (\r\n            <Button text='Load More' callback={()=> setIsLoadingMore(true)}/>\r\n        )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 70px;\r\n    background: var(--medGrey);\r\n    color: var(--white);\r\n\r\n`;\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: var(--max-Width);\r\n    padding: 0 20px;\r\n\r\n    a{\r\n           text-decoration: none;\r\n}\r\n\r\n    span{\r\n        font-size: var(--fontMed);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n        \r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Styles\r\nimport { Wrapper, Content } from './BreadCrumb.styles';\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n\r\n    <Wrapper>\r\n\r\n        <Content>\r\n        <Link to='/'>\r\n            <span>Home</span>\r\n        </Link>\r\n        <span>|</span>\r\n        <span>{movieTitle}</span>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: ${({ backdrop }) => \r\n            backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')`\r\n            : '#000'\r\n        };\r\n    background-size: cover;\r\n    background-position: center;\r\n    padding:40px 20px;\r\n    animation: animateMovieInfo 1s;\r\n\r\n    @keyframes animateMovieInfo {\r\n        from{\r\n            opacity: 0;\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n\r\n    }\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    background: rgba(0,0,0,0.7);\r\n    border-radius: 20px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n        max-height: none;\r\n    }\r\n\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    width: 100%;\r\n    padding: 20px 40px;\r\n    color: var(--white);\r\n    overflow: hidden;\r\n    .rating-directors{\r\n        display: flex;\r\n        justify-content: flex-start;\r\n\r\n    }\r\n    .score{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 35px;\r\n        height: 35px;\r\n        background: #fff;\r\n        color:#000;\r\n        font-weight: 800;\r\n        border-radius: 50%;\r\n        margin:0;\r\n    }\r\n    .director{\r\n        margin: 0 0 0 40px;\r\n        p{\r\n            margin: 0;\r\n        }\r\n    }\r\n    h1{\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n\r\n//Components\r\nimport Thumb from '../Thumb';\r\n\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\n//Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n\r\n\r\nconst MovieInfo = ({ movie })=>(\r\n\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n        <Content>\r\n            <Thumb image={\r\n                movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            clickable={false}\r\n            alt='movie-thumb'\r\n            />\r\n            <Text>\r\n                <h1>{movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n\r\n                <div className='rating-directors'>\r\n                    <div>\r\n                        <h3>RATING</h3>\r\n                        <div className='score'>{movie.vote_average}</div>\r\n                    </div>\r\n                    <div className='director'>\r\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                        {movie.directors.map(director => (\r\n                            <p key={director.credit_id}>{director.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n            </Text>\r\n        </Content>\r\n\r\n    </Wrapper>\r\n\r\n\r\n);\r\n\r\nexport default MovieInfo;\r\n\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    margin: 0 auto;\r\n\r\n    .column{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: var(--medGrey);\r\n        border-radius: 20px;\r\n        margin: 0 20px;\r\n        flex: 1;\r\n        \r\n        :first-child{\r\n            margin-left: 0;\r\n        }\r\n        :last-child{\r\n            margin-right: 0;\r\n        }\r\n        \r\n        }\r\n        @media screen and (max-width: 768px){\r\n            display: block;\r\n            .column{\r\n                margin: 20px 0;\r\n            }\r\n    }\r\n`;\r\n\r\n","import React from 'react';\r\n\r\n//Helpers\r\nimport { calcTime, convertMoney } from '../../helpers';\r\nimport MovieInfo from '../MovieInfo';\r\n\r\n//Styles\r\nimport { Wrapper, Content } from './MovieInfoBar.styles';\r\n\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue}) => (\r\n\r\n    <Wrapper>\r\n        <Content>\r\n            <div className=\"column\">\r\n                <p>Running Time: {calcTime(time)}</p>\r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Budget: {convertMoney(budget)}</p>\r\n            </div>\r\n            <div className=\"column\">\r\n                <p>Revenue: {convertMoney(revenue)}</p>\r\n            </div>\r\n        </Content>\r\n    </Wrapper>\r\n\r\n\r\n\r\n);\r\n\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    color: var(--white);\r\n    background: var(--darkGrey);\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n\r\n    h3{\r\n        margin: 10px 0 0 0;\r\n\r\n    }\r\n    p{\r\n        margin: 5px 0;\r\n    }\r\n\r\n\r\n`;\r\n\r\nexport const Image = styled.img`\r\n\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles\r\n\r\nimport { Wrapper, Image } from './Actor.styles';\r\n\r\nconst Actor = ({name, character, imageUrl}) => (\r\n\r\n    <Wrapper>\r\n        <Image src={imageUrl} alt='actor-thumb'/>\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n\r\n\r\n\r\n);\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n//Components\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport BreadCrumb from './BreadCrumb';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor';\r\n//Hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n//Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n\r\n    const { movieId } = useParams();\r\n\r\n    const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n    if(loading) return <Spinner/>;\r\n    if(error) return <div>Something went wrong...</div>\r\n    return(\r\n        <>\r\n        <BreadCrumb movieTitle={movie.original_title} />\r\n        <MovieInfo movie={movie}/>\r\n        <MovieInfoBar time={movie.runtime} budget={movie.budget} revenue={movie.revenue} />\r\n        <Grid header='Actors'>\r\n            {movie.actors.map(actor => (\r\n                <Actor \r\n                key={actor.credit_id} \r\n                name={actor.name} \r\n                character={actor.character} \r\n                imageUrl={\r\n                    actor.profile_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                    : NoImage\r\n                    \r\n                    }\r\n                    />\r\n            ))}\r\n        </Grid>\r\n        </>\r\n    );\r\n\r\n\r\n\r\n};\r\n\r\nexport default Movie;","import { useState, useEffect } from \"react\";\r\nimport API from '../API'\r\n//helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\n\r\n\r\n\r\nexport const useMovieFetch = movieId => {\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchMovie = async () => {\r\n            try{\r\n                setLoading(true);\r\n                setError(false);\r\n\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId);\r\n                //Get directos only\r\n                const directors = credits.crew.filter(\r\n                    member => member.job === 'Director'\r\n                );\r\n\r\n                    setState({\r\n                        ...movie,\r\n                        actors: credits.cast,\r\n                        directors\r\n                    });\r\n                    setLoading(false);\r\n            }catch (error){\r\n                setError(true);\r\n            }\r\n\r\n\r\n        }\r\n      const sessionState = isPersistedState(movieId);\r\n        if(sessionState) {\r\n            setState(sessionState);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        fetchMovie();\r\n    }, [movieId]);\r\n    //Write to session storage\r\n        useEffect(()=>{\r\n\r\n        sessionStorage.setItem(movieId, JSON.stringify(state));\r\n\r\n\r\n    }, [movieId, state]) \r\n\r\n    return {state, loading, error};\r\n\r\n}","import React from 'react';\r\n\r\nconst NotFound = () => <div>Not Found</div>;\r\n\r\nexport default NotFound;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n:root {\r\n    --maxWidth: 1280px;\r\n    --white: #fff;\r\n    --lightGrey: #eee;\r\n    --medGrey: #353535;\r\n    --darkGrey: #1c1c1c;\r\n    --fontSuperBig: 2.5rem;\r\n    --fontBig: 1.5rem;\r\n    --fontMed: 1.2rem;\r\n    --fontSmall: 1rem;\r\n}\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    font-family: 'Abel', sans-serif;\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    h1 {\r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color: var(--white);\r\n    }\r\n\r\n    h3 {\r\n        font-size: 1.1rem;\r\n        font-weight: 600;\r\n    }\r\n    p {\r\n        font-size: 1rem;\r\n        color: var(--white);\r\n    }\r\n}\r\n`;","import React from 'react';\n\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n//Components\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n//Styles\nimport { GlobalStyle } from './GlobalStyle';\n\nconst App = () => (\n    <Router>\n      <Header/>\n      <Routes>\n      <Route path='/' element={<Home/>}/>\n      <Route path='/:movieId' element={<Movie/>}/>\n      <Route path='/*' element={<NotFound/>}/>\n      </Routes>\n      <GlobalStyle />\n    </Router>\n  );\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}